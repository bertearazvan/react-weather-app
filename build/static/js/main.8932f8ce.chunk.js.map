{"version":3,"sources":["icons/icons.js","components/CurrentWeather.js","components/Forecast.js","components/charts/ChartTempWind.js","components/charts/ChartHum.js","components/Statistics.js","components/Map.js","components/Tabs.js","components/Main.js","components/TablePagination.js","components/SearchBar.js","components/CityList.js","components/nav/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["icons","CurrentWeather","state","loading","props","currentWeather","cod","this","className","src","map","icon","weather","id","process","pathJs","join","alt","main","Math","floor","temp","temp_min","temp_max","name","sys","country","moment","dt","format","sunrise","sunset","humidity","wind","speed","pressure","style","height","color","Component","Forecast","lat","lon","forecast","Object","fetchDataForecastAsync","fetch","apiKey","response","json","then","data","setState","error","console","log","handleForecastChange","borderTop","list","item","index","key","onClick","borderLeft","Date","replace","ChartTempWind","push","time","calendar","width","margin","top","right","bottom","left","dataKey","barSize","fill","type","strokeWidth","stroke","strokeDasharray","verticalAlign","ChartHum","x1","y1","x2","y2","offset","stopColor","stopOpacity","fillOpacity","ChartsContainer","cityId","React","Map","viewport","latitude","Number","longitude","zoom","mapRef","createRef","handleViewportChange","handleGeocoderViewportChange","transitionDuration","handleMapChange","refD","ref","onViewportChange","showUserLocation","containerRef","placeholder","onResult","result","center","mapboxApiAccessToken","REACT_APP_MAPBOX_ACCESS_TOKEN","PureComponent","CenteredTabs","useState","value","setValue","Paper","Tabs","onChange","event","newValue","handleTabChange","indicatorColor","textColor","centered","Tab","label","Main","REACT_APP_API_KEY","activeTab","uberSearch","fetchDataAsync","onForecastChange","currentForecast","onMapChange","long","err","alert","onTabChange","tabIndex","columns","minWidth","align","useStyles","makeStyles","root","container","maxHeight","StickyHeadTable","classes","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","data-cy","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","TableBody","rows","slice","row","hover","role","geonameid","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","newPage","onChangeRowsPerPage","target","cityJSON","cities","SearchBar","foundCities","searchedString","onSearching","filter","city","subcountry","toLowerCase","includes","onKeyUp","handleSearchCity","CityListJSON","forEach","CityList","onCityChange","citylist","fullList","text","textAlign","fontWeight","TemporaryDrawer","toggleDrawer","anchor","open","Fragment","backgroundColor","borderRadius","fontSize","Drawer","onClose","clsx","onKeyDown","List","ListItem","button","Link","to","ListItemText","primary","DotEmv","config","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8932f8ce.chunk.js","sourcesContent":["const icons = [{\r\n        \"id\": \"01d\",\r\n        \"name\": \"Clear Sky\",\r\n        \"pathJs\": \"/weather_icons/01d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/oid.png\"\r\n    }, {\r\n        \"id\": \"02d\",\r\n        \"name\": \"Few clouds\",\r\n        \"pathJs\": \"/weather_icons/02d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/02d.png\"\r\n    },\r\n    {\r\n        \"id\": \"03d\",\r\n        \"name\": \"Scattered clouds\",\r\n        \"pathJs\": \"/weather_icons/03d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/03d.png\"\r\n    },\r\n    {\r\n        \"id\": \"04d\",\r\n        \"name\": \"Broken clouds\",\r\n        \"pathJs\": \"/weather_icons/04d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/04d.png\"\r\n    },\r\n    {\r\n        \"id\": \"09d\",\r\n        \"name\": \"Shower rain\",\r\n        \"pathJs\": \"/weather_icons/09d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/09d.png\"\r\n    },\r\n    {\r\n        \"id\": \"10d\",\r\n        \"name\": \"Rain\",\r\n        \"pathJs\": \"/weather_icons/10d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/10d.png\"\r\n    },\r\n    {\r\n        \"id\": \"11d\",\r\n        \"name\": \"Thunderstorm\",\r\n        \"pathJs\": \"/weather_icons/11d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/11d.png\"\r\n    },\r\n    {\r\n        \"id\": \"13d\",\r\n        \"name\": \"Snow\",\r\n        \"pathJs\": \"/weather_icons/13d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/13d.png\"\r\n    },\r\n    {\r\n        \"id\": \"50d\",\r\n        \"name\": \"Mist\",\r\n        \"pathJs\": \"/weather_icons/50d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/50d.png\"\r\n    },\r\n    {\r\n        \"id\": \"01n\",\r\n        \"name\": \"Clear Sky\",\r\n        \"pathJs\": \"/weather_icons/01n.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/o1d.png\"\r\n    }, {\r\n        \"id\": \"02n\",\r\n        \"name\": \"Few clouds\",\r\n        \"pathJs\": \"/weather_icons/03d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/02d.png\"\r\n    }, {\r\n        \"id\": \"03n\",\r\n        \"name\": \"Scattered clouds\",\r\n        \"pathJs\": \"/weather_icons/03d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/03d.png\"\r\n    }, {\r\n        \"id\": \"04n\",\r\n        \"name\": \"Broken clouds\",\r\n        \"pathJs\": \"/weather_icons/04d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/04d.png\"\r\n    }, {\r\n        \"id\": \"09n\",\r\n        \"name\": \"Shower rain\",\r\n        \"pathJs\": \"/weather_icons/09d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/09d.png\"\r\n    }, {\r\n        \"id\": \"10n\",\r\n        \"name\": \"Rain\",\r\n        \"pathJs\": \"/weather_icons/10d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/10d.png\"\r\n    }, {\r\n        \"id\": \"11n\",\r\n        \"name\": \"Thunderstorm\",\r\n        \"pathJs\": \"/weather_icons/11d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/11d.png\"\r\n    }, {\r\n        \"id\": \"13n\",\r\n        \"name\": \"Snow\",\r\n        \"pathJs\": \"/weather_icons/13d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/13d.png\"\r\n    }, {\r\n        \"id\": \"50n\",\r\n        \"name\": \"Mist\",\r\n        \"pathJs\": \"/weather_icons/50d.png\",\r\n        \"pathHtml\": \"%PUBLIC_URL%/weather_icons/50d.png\"\r\n    },\r\n]\r\n\r\nexport default icons;","import React, { Component } from \"react\";\r\nimport icons from \"../icons/icons\";\r\nimport moment from \"moment\";\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\n\r\nclass CurrentWeather extends Component {\r\n  state = {\r\n    loading: this.props.currentWeather.cod === 200 ? true : false\r\n  };\r\n\r\n  render() {\r\n    const { currentWeather } = this.props;\r\n    const { loading } = this.state;\r\n\r\n    if (loading) {\r\n      return (\r\n        <div className='p-4 grid grid-cols-1 h-full sm:grid-cols-7'>\r\n          <div className='flex sm:col-span-2 items-center justify-center'>\r\n            <div>\r\n              <div className='flex justify-center'>\r\n                <img\r\n                  className='weatherImg'\r\n                  // eslint-disable-next-line array-callback-return\r\n                  src={icons\r\n                    .map(icon => {\r\n                      if (currentWeather.weather[0].icon === icon.id) {\r\n                        return process.env.PUBLIC_URL + icon.pathJs;\r\n                      } else {\r\n                        return \"\";\r\n                      }\r\n                    })\r\n                    .join(\"\")}\r\n                  alt='weather-icon'\r\n                />\r\n              </div>\r\n              <h3>{currentWeather.weather[0].main}</h3>\r\n            </div>\r\n          </div>\r\n          <div className='grid row-start-1 md:row-auto grid-rows-12 gap-4 sm:col-span-5'>\r\n            <div className='grid grid-cols-12 row-span-4'>\r\n              <div className='flex col-span-4 items-center justify-center'>\r\n                <div>\r\n                  <p id='tempMain'>\r\n                    {Math.floor(currentWeather.main.temp)}&#xb0;C\r\n                  </p>\r\n                  <p id='minMaxMain'>\r\n                    {Math.floor(currentWeather.main.temp_min)}&#xb0;/\r\n                    {Math.floor(currentWeather.main.temp_max)}&#xb0;\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className='flex col-span-8 items-center justify-center'>\r\n                <div>\r\n                  <h2>\r\n                    {currentWeather.name + \", \" + currentWeather.sys.country}\r\n                  </h2>\r\n                  <h3>\r\n                    {moment(currentWeather.dt * 1000).format(\"dddd\")}{\" \"}\r\n                    {moment(currentWeather.dt * 1000).format(\"LT\")}\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='grid grid-cols-5 row-span-8 mx-2'>\r\n              <div className='flex justify-center'>\r\n                <div>\r\n                  <h4>RISES</h4>\r\n                  <p className='specificsMain'>\r\n                    {moment(currentWeather.sys.sunrise * 1000).format(\"LT\")}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className='flex justify-center'>\r\n                <div>\r\n                  <h4>SETS</h4>\r\n                  <p className='specificsMain'>\r\n                    {moment(currentWeather.sys.sunset * 1000).format(\"LT\")}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className='flex justify-center'>\r\n                <div>\r\n                  <h4>HUM.</h4>\r\n                  <p className='specificsMain'>\r\n                    {currentWeather.main.humidity}%\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className='flex justify-center'>\r\n                <div>\r\n                  <h4>WIND</h4>\r\n                  <p className='specificsMain'>\r\n                    {currentWeather.wind.speed} m/s\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className='flex justify-center'>\r\n                <div>\r\n                  <h4>PRESS.</h4>\r\n                  <p className='specificsMain'>\r\n                    {currentWeather.main.pressure} hPa\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          className='p-4 flex justify-center items-center'\r\n          style={{ height: \"60%\" }}>\r\n          <div>\r\n            <GridLoader color={\"#123abc\"} />\r\n            <p className='mt-4'>Loading...</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default CurrentWeather;\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport icons from \"../icons/icons\";\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\n\r\nexport default class Forecast extends Component {\r\n  state = {\r\n    lat: this.props.lat,\r\n    lon: this.props.lon,\r\n    loading: false,\r\n    forecast: Object\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.fetchDataForecastAsync().then(data =>\r\n        this.setState({\r\n          forecast: data,\r\n          loading: true\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  fetchDataForecastAsync = async () => {\r\n    const response = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${this.state.lat}&lon=${this.state.lon}&appid=${this.props.apiKey}&units=metric&cnt=5`\r\n    );\r\n    return await response.json();\r\n  };\r\n\r\n  render() {\r\n    const { forecast, loading } = this.state;\r\n    const { handleForecastChange } = this.props;\r\n\r\n    if (loading && forecast.cod === \"200\") {\r\n      return (\r\n        <div className='p-4 h-full'>\r\n          <div\r\n            className='grid grid-cols-5 h-full pt-4'\r\n            style={{\r\n              borderTop: \"3px solid black\"\r\n            }}>\r\n            {forecast.list.map((item, index) => {\r\n              return (\r\n                <div\r\n                  key={(\"forecast-\", index)}\r\n                  className='flex items-center justify-center p-4 forecastItem'\r\n                  onClick={() => handleForecastChange(item)}\r\n                  style={\r\n                    index !== 0\r\n                      ? { borderLeft: \"3px solid black\" }\r\n                      : { borderLeft: \"0px solid black\" }\r\n                  }>\r\n                  <div>\r\n                    <h4>\r\n                      {moment(new Date()).format(\"dddd\") ===\r\n                      moment(item.dt * 1000).format(\"dddd\")\r\n                        ? \"Today\"\r\n                        : moment(item.dt * 1000).format(\"dddd\")}\r\n                      {<br />}\r\n                      {moment(item.dt * 1000)\r\n                        .format(\"LT\")\r\n                        .replace(\":00\", \"\")}\r\n                    </h4>\r\n                    <div className='flex justify-center'>\r\n                      <img\r\n                        className='forecastImg'\r\n                        // eslint-disable-next-line array-callback-return\r\n                        src={icons\r\n                          .map(icon => {\r\n                            if (item.weather[0].icon === icon.id) {\r\n                              return process.env.PUBLIC_URL + icon.pathJs;\r\n                            } else {\r\n                              return \"\";\r\n                            }\r\n                          })\r\n                          .join(\"\")}\r\n                        alt='weather-icon'\r\n                      />\r\n                    </div>\r\n                    <p className='forecastTemp'>\r\n                      {Math.floor(item.main.temp)}&#xb0;C\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          className='p-4 flex justify-center items-center'\r\n          style={{ height: \"40%\" }}>\r\n          <div>\r\n            <GridLoader color={\"#123abc\"} />\r\n            <p className='mt-4'>Loading...</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  Legend,\r\n  Bar\r\n} from \"recharts\";\r\n\r\nfunction ChartTempWind(props) {\r\n  console.log(props.data);\r\n  // const data = [{ name: \"Humidity & temperature\", temp: 1 }];\r\n  const data = [];\r\n  console.log(data + \"asdaads\");\r\n\r\n  console.log(data + \"asdaadsassd\");\r\n\r\n  props.data.map((forecast, index) => {\r\n    console.log(moment(forecast.dt * 1000).format(\"LT\"));\r\n    return data.push({\r\n      \"Wind(m/h)\": forecast.wind.speed,\r\n      \"Temperature(°C)\": forecast.main.temp,\r\n      time: moment(forecast.dt * 1000).calendar()\r\n    });\r\n  });\r\n  return (\r\n    <ResponsiveContainer width='100%' height='100%'>\r\n      <ComposedChart\r\n        data={data}\r\n        margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n        <Bar dataKey='Temperature(°C)' barSize={14} fill='#F8AB11' />\r\n        <Line\r\n          type='natural'\r\n          dataKey='Wind(m/h)'\r\n          strokeWidth='2'\r\n          stroke='#0E34A0'\r\n        />\r\n\r\n        <CartesianGrid stroke='#ccc' strokeDasharray='8' />\r\n        <XAxis dataKey='time' />\r\n        <Legend verticalAlign='bottom' height={36} />\r\n        <YAxis />\r\n        <Tooltip />\r\n      </ComposedChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default ChartTempWind;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport {\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  Area,\r\n  Legend,\r\n  AreaChart\r\n} from \"recharts\";\r\n\r\nfunction ChartHum(props) {\r\n  console.log(props.data);\r\n\r\n  // const data = [{ name: \"Humidity & temperature\", temp: 1 }];\r\n  const data = [];\r\n  console.log(data + \"asdaads\");\r\n\r\n  console.log(data + \"asdaadsassd\");\r\n\r\n  props.data.map((forecast, index) => {\r\n    console.log(moment(forecast.dt * 1000).format(\"LT\"));\r\n    return data.push({\r\n      \"Humidity(%)\": forecast.main.humidity,\r\n      time: moment(forecast.dt * 1000).calendar()\r\n    });\r\n  });\r\n  return (\r\n    <ResponsiveContainer width='100%' height='100%'>\r\n      <AreaChart data={data} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n        <defs>\r\n          <linearGradient id='colorUv' x1='0' y1='0' x2='0' y2='1'>\r\n            <stop offset='5%' stopColor='#5C63F2' stopOpacity={0.8} />\r\n            <stop offset='95%' stopColor='#5C63F2' stopOpacity={0.4} />\r\n          </linearGradient>\r\n        </defs>\r\n\r\n        <CartesianGrid stroke='#ccc' strokeDasharray='8' />\r\n        <XAxis dataKey='time' />\r\n        <Legend verticalAlign='bottom' height={36} />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Area\r\n          type='monotone'\r\n          dataKey='Humidity(%)'\r\n          stroke='#5C63F2'\r\n          fillOpacity={1}\r\n          fill='url(#colorUv)'\r\n        />\r\n      </AreaChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n\r\nexport default ChartHum;\r\n","import React from \"react\";\r\nimport ChartTempWind from \"./charts/ChartTempWind\";\r\nimport ChartHum from \"./charts/ChartHum\";\r\n\r\nexport default class ChartsContainer extends React.Component {\r\n  state = {\r\n    lat: this.props.lat,\r\n    lon: this.props.lon,\r\n    cityId: this.props.cityId,\r\n    forecast: this.props.forecast\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='grid grid-rows-2 sm:p-8 overflow-y-auto'>\r\n        <div className='chart flex items-center h-full w-full '>\r\n          {<ChartTempWind data={this.props.forecast} />}\r\n        </div>\r\n        <div className=' flex h-full w-full items-center'>\r\n          {<ChartHum data={this.props.forecast} />}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    // return (\r\n    //   <div\r\n    //     className=' flex items-center justify-center'\r\n    //     style={{ height: \"70%\" }}>\r\n    //     <div>\r\n    //       <GridLoader color={\"#123abc\"} />\r\n    //       <p className='mt-4'>Loading...</p>\r\n    //     </div>\r\n    //   </div>\r\n    // );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport ReactMapGL, { NavigationControl, GeolocateControl } from \"react-map-gl\";\r\nimport Geocoder from \"react-map-gl-geocoder\";\r\n\r\n// \"styles\": {\r\n//     \"basic\": \"mapbox://styles/mapbox/basic-v10\",\r\n//     \"dark\": \"mapbox://styles/mapbox/dark-v10\",\r\n//     \"light\": \"mapbox://styles/mapbox/light-v10\",\r\n//     \"outdoor\": \"mapbox://styles/mapbox/outdoors-v11\",\r\n//     \"satellite\": \"mapbox://styles/mapbox/satellite-v9\",\r\n//     \"streets\": \"mapbox://styles/mapbox/streets-v11\",\r\n//     \"parcels\": \"mapbox://styles/robert-op/ck5y8yjpy11r41ilhnybzc4kw\",\r\n//     \"lightparcels\": \"mapbox://styles/robert-op/ck7g51r2d3pon1ip8nybylji1\"\r\n//   },\r\nclass Map extends PureComponent {\r\n  state = {\r\n    viewport: {\r\n      latitude: Number(this.props.lat),\r\n      longitude: Number(this.props.lon),\r\n      zoom: 8\r\n    }\r\n  };\r\n\r\n  mapRef = React.createRef();\r\n\r\n  handleViewportChange = viewport => {\r\n    this.setState({\r\n      viewport: { ...this.state.viewport, ...viewport }\r\n    });\r\n  };\r\n\r\n  // if you are happy with Geocoder default settings, you can just use handleViewportChange directly\r\n  handleGeocoderViewportChange = viewport => {\r\n    const geocoderDefaultOverrides = { transitionDuration: 1000 };\r\n\r\n    return this.handleViewportChange({\r\n      ...viewport,\r\n      ...geocoderDefaultOverrides\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { handleMapChange, refD } = this.props;\r\n\r\n    return (\r\n      <ReactMapGL\r\n        {...this.state.viewport}\r\n        ref={this.mapRef}\r\n        width='100%'\r\n        height='100%'\r\n        onViewportChange={viewport => this.setState({ viewport })}>\r\n        <div className='absolute mb-0 h-full flex items-center'>\r\n          <NavigationControl className='m-2' />\r\n        </div>\r\n        <div className='m-2 float-right'>\r\n          <GeolocateControl showUserLocation={true} />\r\n        </div>\r\n\r\n        <Geocoder\r\n          mapRef={this.mapRef}\r\n          containerRef={refD}\r\n          placeholder='Search city'\r\n          onResult={result =>\r\n            handleMapChange(result.result.center[1], result.result.center[0])\r\n          }\r\n          onViewportChange={this.handleGeocoderViewportChange}\r\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_ACCESS_TOKEN}\r\n        />\r\n\r\n        {/* <Marker\r\n          longitude={this.state.viewport.longitude}\r\n          latitude={this.state.viewport.latitude}>\r\n          <span>\r\n            <img\r\n              className='map-pin m-auto'\r\n              src={process.env.PUBLIC_URL + \"/pin.png\"}\r\n              alt='pin'\r\n            />\r\n          </span>\r\n        </Marker> */}\r\n        {\r\n          // cityList.map((country, index) => {\r\n          //   // console.log(country.CountryName);\r\n          //   return (\r\n          //     <Marker\r\n          //       key={index}\r\n          //       longitude={Number(country.CapitalLongitude)}\r\n          //       latitude={Number(country.CapitalLatitude)}>\r\n          //       {/* <img src='' alt='' /> */}\r\n          //       <span\r\n          //         className='cursor-pointer'\r\n          //         onClick={() => handleMapChange(country)}>\r\n          //         <img\r\n          //           className='map-pin m-auto'\r\n          //           src={process.env.PUBLIC_URL + \"/pin.png\"}\r\n          //           alt='pin'\r\n          //         />\r\n          //         <h1 className='cursor-pointer text-center'>\r\n          //           {country.CapitalName}\r\n          //         </h1>\r\n          //       </span>\r\n          //     </Marker>\r\n          //   );\r\n          // })\r\n        }\r\n      </ReactMapGL>\r\n    );\r\n  }\r\n}\r\nexport default Map;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nexport default function CenteredTabs(props) {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.handleTabChange(newValue);\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        indicatorColor='primary'\r\n        textColor='primary'\r\n        centered>\r\n        <Tab label='Weather' />\r\n        <Tab label='Statistics' />\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport CurrentWeather from \"./CurrentWeather\";\r\nimport Forecast from \"./Forecast\";\r\nimport ChartsContainer from \"./Statistics\";\r\nimport GridLoader from \"react-spinners/GridLoader\";\r\nimport Map from \"./Map\";\r\nimport CenteredTabs from \"./Tabs\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    currentWeather: Object,\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    lat: 52.35,\r\n    lon: 4.916667,\r\n    loading: false,\r\n    activeTab: 0,\r\n    forecast: Object\r\n  };\r\n\r\n  uberSearch = React.createRef();\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.fetchDataAsync(this.state.lat, this.state.lon).then(data =>\r\n        this.setState({ currentWeather: data, loading: true })\r\n      );\r\n      this.fetchDataForecastAsync(this.state.lat, this.state.lon).then(data => {\r\n        this.setState({\r\n          forecast: data,\r\n          loading: true\r\n        });\r\n      });\r\n    } catch (err) {\r\n      console.log(\"An error has occured: \", err);\r\n    }\r\n  }\r\n\r\n  fetchDataForecastAsync = async (lat, lon) => {\r\n    const response = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${this.state.apiKey}&units=metric`\r\n    );\r\n    return await response.json();\r\n  };\r\n\r\n  fetchDataAsync = async (lat, lon) => {\r\n    const response = await fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${this.state.apiKey}&units=metric`\r\n    );\r\n    return await response.json();\r\n  };\r\n\r\n  onForecastChange = currentForecast => {\r\n    currentForecast.sys.sunrise = this.state.currentWeather.sys.sunrise;\r\n    currentForecast.sys.sunset = this.state.currentWeather.sys.sunset;\r\n    currentForecast.name = this.state.currentWeather.name;\r\n    currentForecast.sys.country = this.state.currentWeather.sys.country;\r\n    currentForecast.cod = this.state.currentWeather.cod;\r\n    this.setState({ currentWeather: currentForecast });\r\n  };\r\n\r\n  onMapChange = (lat, long) => {\r\n    // this.setState({ loading: false });\r\n    try {\r\n      this.fetchDataAsync(lat, long).then(data => {\r\n        this.setState({\r\n          currentWeather: data,\r\n\r\n          lat: lat,\r\n          lon: long\r\n        });\r\n      });\r\n\r\n      this.fetchDataForecastAsync(lat, long).then(data => {\r\n        this.setState({\r\n          forecast: data,\r\n\r\n          lat: lat,\r\n          lon: long\r\n        });\r\n      });\r\n    } catch (err) {\r\n      alert(\"An error has occured: \", err);\r\n    }\r\n  };\r\n\r\n  onTabChange = tabIndex => {\r\n    return this.setState({ activeTab: tabIndex });\r\n  };\r\n\r\n  render() {\r\n    const { loading, currentWeather, lat, lon } = this.state;\r\n\r\n    if (\r\n      (loading && currentWeather.cod === 200) ||\r\n      currentWeather.cod === \"200\"\r\n    ) {\r\n      return (\r\n        <div className='flex relative w-full h-screen  m-auto justify-center items-center'>\r\n          <div className='h-full sm:h-screen flex sm:items-center justify-center'>\r\n            {/* <SearchBar/> */}\r\n            <div className='w-screen'>\r\n              <div\r\n                id='container-geocode'\r\n                className='flex justify-center m-auto'\r\n                ref={this.uberSearch}\r\n              />\r\n              <div\r\n                id='mapDiv'\r\n                className='grid h-auto w-full md:w-10/12 sm:grid-cols-5 shadow-md m-auto md:mt-16'>\r\n                <div\r\n                  id='mapContainer'\r\n                  className='sm:col-span-2 h-screen md:h-auto flex-1'>\r\n                  <Map\r\n                    lon={lon}\r\n                    lat={lat}\r\n                    handleMapChange={this.onMapChange}\r\n                    refD={this.uberSearch}\r\n                  />\r\n                </div>\r\n                <div className='flex-1 sm:col-span-3 overflow-y-auto w-full h-full text-center rounded-lg'>\r\n                  <div className='flex justify-center z-10'>\r\n                    <CenteredTabs handleTabChange={this.onTabChange} />\r\n                  </div>\r\n                  {this.state.activeTab === 0 ? (\r\n                    <div className='grid grid-rows-7'>\r\n                      <div className='row-span-4 h-full'>\r\n                        <CurrentWeather\r\n                          currentWeather={this.state.currentWeather}\r\n                        />\r\n                      </div>\r\n                      <div className='row-span-3 h-full'>\r\n                        <Forecast\r\n                          handleForecastChange={this.onForecastChange}\r\n                          lat={this.state.lat}\r\n                          lon={this.state.lon}\r\n                          apiKey={this.state.apiKey}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className='row-span-5'>\r\n                      <ChartsContainer\r\n                        lat={this.state.lat}\r\n                        lon={this.state.lon}\r\n                        apiKey={this.state.apiKey}\r\n                        forecast={this.state.forecast.list}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          className='flex max-w-5xl m-auto items-center'\r\n          style={{ height: \"90vh\" }}>\r\n          <div\r\n            className='border flex w-full justify-center items-center border-gray-600 text-center rounded-lg shadow-md'\r\n            style={{ height: \"60vh\" }}>\r\n            <div>\r\n              <GridLoader color={\"#123abc\"} />\r\n              <p className='mt-4'>Loading...</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst columns = [\r\n  { id: \"geonameid\", label: \"Geo id\", minWidth: 170 },\r\n  { id: \"name\", label: \"City\", minWidth: 170, align: \"right\" },\r\n  { id: \"subcountry\", label: \"Subcountry\", align: \"right\", minWidth: 100 },\r\n  { id: \"country\", label: \"Country\", minWidth: 170, align: \"right\" }\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  container: {\r\n    maxHeight: \"60vh\"\r\n  }\r\n});\r\n\r\nexport default function StickyHeadTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer data-cy='tableCities' className={classes.container}>\r\n        <Table stickyHeader aria-label='sticky table'>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map(row => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role='checkbox'\r\n                    tabIndex={-1}\r\n                    key={row.geonameid}>\r\n                    {columns.map(column => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        data-cy='paginationTableCities'\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component='div'\r\n        count={props.rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport cities from \"../icons/city_list.json\";\r\n\r\nlet cityJSON = cities;\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    loading: true,\r\n    foundCities: [],\r\n    searchedString: \"\"\r\n  };\r\n\r\n  onSearching = event => {\r\n    this.setState({ searchedString: event.target.value });\r\n    var cities = cityJSON.filter(function(city) {\r\n      let FullString = city.name + city.country + city.subcountry;\r\n      return FullString.toLowerCase().includes(\r\n        event.target.value.toLowerCase()\r\n      );\r\n    });\r\n\r\n    this.setState({ foundCities: cities });\r\n  };\r\n\r\n  render() {\r\n    const { loading, foundCities } = this.state;\r\n\r\n    if (loading) {\r\n      return (\r\n        <div className='grid w-full grid-cols-1'>\r\n          <div className='flex justify-center'>\r\n            <div className=' w-10/12 sm:w-6/12 border border-gray-600 rounded-lg shadow-md'>\r\n              <input\r\n                type='text'\r\n                id='searchBar'\r\n                data-cy='searchBar'\r\n                className='searchBar w-10/12 p-2 bg-transparent'\r\n                placeholder='Search by city...'\r\n                onKeyUp={event => this.onSearching(event)}\r\n              />\r\n\r\n              <button\r\n                onClick={() => this.props.handleSearchCity(foundCities)}\r\n                className='searchBtn'\r\n                data-cy='searchBtn'\r\n                style={{ width: \"15%\" }}>\r\n                View\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>Loading</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport StickyHeadTable from \"./TablePagination\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport CityListJSON from \"../icons/city_list.json\";\r\n\r\nfunction createData(geonameid, name, subcountry, country) {\r\n  return { geonameid, name, subcountry, country };\r\n}\r\n\r\nconst rows = [];\r\n\r\nCityListJSON.forEach(city => {\r\n  rows.push(\r\n    createData(city.geonameid, city.name, city.subcountry, city.country)\r\n  );\r\n});\r\n\r\nexport default class CityList extends Component {\r\n  state = {\r\n    rows: rows\r\n  };\r\n  onCityChange = citylist => {\r\n    this.setState({ rows: citylist });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='max-w-5xl flex items-center w-full h-screen m-auto '>\r\n        <div className='w-full'>\r\n          <div className='flex-1 mt-16 sm:mt-auto relative'>\r\n            <SearchBar handleSearchCity={this.onCityChange} />\r\n          </div>\r\n          <div className='flex min-w-5xl w-full mt-10 flex-1 items-center'>\r\n            <StickyHeadTable rows={this.state.rows} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuOutlinedIcon from \"@material-ui/icons/MenuOutlined\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: \"100%\"\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    fontWeight: 600\r\n  },\r\n  icon: {\r\n    margin: \"10px\",\r\n    color: \"white\"\r\n  }\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    left: false\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => event => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <React.Fragment key={\"left\"}>\r\n        <div\r\n          className='mx-6 my-6 sm:mx-10 sm:my-10 z-10 absolute flex items-center cursor-pointer'\r\n          onClick={toggleDrawer(\"left\", true)}>\r\n          <div style={{ backgroundColor: \"#3742fa\", borderRadius: \"60%\" }}>\r\n            <MenuOutlinedIcon\r\n              data-cy='sidebarIcon'\r\n              className={classes.icon}\r\n              fontSize='large'\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <Drawer\r\n          data-cy='sidebarDrawer'\r\n          anchor={\"left\"}\r\n          open={state[\"left\"]}\r\n          onClose={toggleDrawer(\"left\", false)}>\r\n          <h2\r\n            className='m-4'\r\n            data-cy='sidebarTitle'\r\n            style={{ color: \"#3742fa\" }}>\r\n            Weather app\r\n          </h2>\r\n          <div\r\n            className={clsx(classes.list)}\r\n            role='presentation'\r\n            onClick={toggleDrawer(\"left\", false)}\r\n            onKeyDown={toggleDrawer(\"left\", false)}>\r\n            <List data-cy='sidebarList'>\r\n              <ListItem\r\n                className={classes.text}\r\n                button\r\n                key='Weather'\r\n                component={Link}\r\n                to={process.env.PUBLIC_URL}>\r\n                <ListItemText primary='Weather' />\r\n              </ListItem>\r\n              <ListItem\r\n                className={classes.text}\r\n                button\r\n                key='City List'\r\n                component={Link}\r\n                to={process.env.PUBLIC_URL + \"/city-list\"}>\r\n                <ListItemText primary='City List' />\r\n              </ListItem>\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Main from \"./components/Main\";\r\nimport CityList from \"./components/CityList\";\r\nimport TemporaryDrawer from \"./components/nav/Sidebar\";\r\nimport \"./App.css\";\r\nimport DotEmv from \"dotenv\";\r\n\r\nDotEmv.config();\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Router>\r\n        <TemporaryDrawer/>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL}\r\n            component={props => <Main {...props} />}\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/city-list\"}\r\n            component={props => <CityList {...props} />}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n      {/* <CenteredTabs /> */}\r\n      {/* <Router className=''>\r\n        <div className='w-full z-10 relative px-32 py-8'>\r\n          <div className='float-left nav'>\r\n            <ul>\r\n              <Link className='inline-block' to={process.env.PUBLIC_URL}>\r\n                <p> Weather App </p>\r\n              </Link>\r\n              <Link\r\n                className='inline-block ml-8'\r\n                to={process.env.PUBLIC_URL + \"/city-list\"}>\r\n                <p> City list </p>\r\n              </Link>\r\n            </ul>\r\n          </div>\r\n          <div className='float-right nav'>\r\n            <a href='https://github.com/bertearazvan/react-weather-app.git'>\r\n              <p> GitHub repo </p>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL}\r\n            component={props => <Main {...props} />}\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + \"/city-list\"}\r\n            component={props => <CityList {...props} />}\r\n          />\r\n        </Switch>\r\n      </Router> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}